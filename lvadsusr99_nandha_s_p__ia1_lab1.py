# -*- coding: utf-8 -*-
"""LVADSUSR99_NANDHA S P_ IA1_LAB1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mIAaiX6XaRHELhMmW8XGRZ6TPeI2kOks
"""

#Q1
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import pandas as pd

data = pd.read_csv("/content/expenses.csv")
print(data.isnull().sum())
data.dropna(inplace=True)

Q1 = data.quantile(0.25)
Q3 = data.quantile(0.75)
IQR = Q3 - Q1

outliers = ((data < (Q1 - 1.5 * IQR)) | (data > (Q3 + 1.5 * IQR))).any(axis=1)

#Q2
plt.figure(figsize=(10, 6))
sns.boxplot(data=data[['age', 'bmi', 'children', 'charges']])
plt.title('Boxplot for Outlier Detection')
plt.show()

#Q3
cleaned_df = data[~outliers]
cleaned_df
import seaborn as sns
sns.pairplot(cleaned_df)

#Q4
df = pd.get_dummies(cleaned_df, columns=['sex', 'smoker', 'region'], drop_first=True)
df

#Q5
X = df.drop(columns=['charges'])
y = df['charges']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

#Q6

from sklearn.metrics import r2_score

from sklearn.metrics import mean_squared_error

mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)


r_squared = r2_score(y_test, y_pred)
print("R-squared:", r_squared)

rmse = mean_squared_error(y_test, y_pred, squared=False)
print("Root Mean Squared Error (RMSE):", rmse)

#Q7
age = float(input("age: "))
print("______________________________________________________________________")
bmi = float(input("BMI: "))
print("______________________________________________________________________")
children = int(input(" number of children/dependents: "))
print("______________________________________________________________________")
sex = int(input("insured male? (1 for Yes, 0 for No): "))
print("______________________________________________________________________")
smoker = int(input("smoker? (1 for Yes, 0 for No): "))
print("______________________________________________________________________")
region_southeast = int(input("from the Southeast region? (1 for Yes, 0 for No): "))
print("______________________________________________________________________")
region_northwest = int(input("from the Northwest region? (1 for Yes, 0 for No): "))
print("______________________________________________________________________")
region_southwest = int(input("from the Southwest region? (1 for Yes, 0 for No): "))
print("______________________________________________________________________")
input_data = pd.DataFrame({
    'age': [age],
    'bmi': [bmi],
    'children': [children],
    'sex_male': [sex],
    'smoker_yes': [smoker],
    'region_northwest': [region_northwest],
    'region_southeast': [region_southeast],
    'region_southwest': [region_southwest]
})

predicted_charges = model.predict(input_data)
print("Predicted Insurance Charges:", predicted_charges[0])